<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Dan Goldin</title><link>/tags/javascript/</link><description>Recent content in javascript on Dan Goldin</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 12 Dec 2015 00:00:00 +0000</lastBuildDate><atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Jersey City garbage truck routes</title><link>/2015/12/12/jersey-city-garbage-truck-routes/</link><pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate><guid>/2015/12/12/jersey-city-garbage-truck-routes/</guid><description>A couple of months ago I took a stab at plotting the Jersey City parking zones after getting frustrated that the only place to see them was a PDF of streets and addresses. Last week someone left an awesome comment pointing out that Jersey City has a bunch of open data available, including a near-real time feed of garbage truck locations, a general open data portal, as well as the ability to request custom data.</description></item><item><title>Mapping the Jersey City parking zones II</title><link>/2015/09/24/mapping-the-jersey-city-parking-zones-ii/</link><pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate><guid>/2015/09/24/mapping-the-jersey-city-parking-zones-ii/</guid><description>I finally had the chance to finish up the Jersey City parking zone mapping project from a couple of weeks ago. The goal was to take a PDF of valid addresses for each zone and visualize it on a map. The result can be found at https://dangoldin.github.io/jersey-city-open-data/ and includes the zones that had enough geocodeable addresses to generate a valid polygon.
As expected, most of the work was going from the PDF to a set of valid geocoded addresses.</description></item><item><title>Mapping the Jersey City parking zones</title><link>/2015/09/12/mapping-the-jersey-city-parking-zones/</link><pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate><guid>/2015/09/12/mapping-the-jersey-city-parking-zones/</guid><description>A big part of owning a car in Jersey City is dealing with the street parking. Unfortunately, Jersey City does not make it easy to see what the zones are - instead there&amp;rsquo;s a PDF that lists the streets and address ranges that are part of each zone. After getting frustrated with this annoyance for too long I decided to just take matters into my own hands and visualize the zones through some scripting.</description></item><item><title>Lists and localStorage</title><link>/2015/02/26/lists-and-localstorage/</link><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid>/2015/02/26/lists-and-localstorage/</guid><description>I recently discovered the localStorage functionality in HTML5 and used it on a quick internal tool at TripleLift. One hiccup I ran into was that while it provides the ability to set and get key/value pairs it stores everything as a string so I needed to write a few utility methods to get it to work with lists. They’re pretty straightforward but hopefully they inspire someone to improve on them.</description></item><item><title>Lessons from Node</title><link>/2015/02/22/lessons-from-node/</link><pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate><guid>/2015/02/22/lessons-from-node/</guid><description>I&amp;rsquo;ve decided to move on from Node after messing around with it for the past couple of months. And while the experience is still fresh I wanted to share my thoughts. I’m far from an expert so take all these with a grain of salt.
Node’s powerful and in the right hands can make a developer extremely productive. I was able to write a few simple applications surprisingly quickly given my limited knowledge and I can see why so many opt to use it.</description></item><item><title>Redirect recursion</title><link>/2014/12/31/redirect-recursion/</link><pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate><guid>/2014/12/31/redirect-recursion/</guid><description>I’ve stumbled onto what seems to be a solution without a problem but something that’s been fun to experiment with and might have an actual application. The idea is to replace a recursion step with a URL redirection. In this situation the base case will return a 200 response while the recursive step will do a redirection with a slightly updated URL. The sample node server below uses this idea to handle a three tasks - sum up to n, compute a factorial, and test whether an integer is prime.</description></item><item><title>More Sierpinski fun</title><link>/2014/02/21/more-sierpinski-fun/</link><pubDate>Fri, 21 Feb 2014 00:00:00 +0000</pubDate><guid>/2014/02/21/more-sierpinski-fun/</guid><description>As a follow up to my previous post, I modified my Sierpinski generation code to allow specifying the number of sides and the distance ratio for each iteration of the loop. The Sierpinski triangle can be generated with 3 sides and a distance ratio of 0.5. Increasing the number of sides and decreasing the ratio leads to some interesting patterns - it looks as if for a given N, we get N shapes each consisting of N shapes.</description></item><item><title>Sierpinski triangle in D3</title><link>/2014/02/19/sierpinski-triangle-in-d3/</link><pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate><guid>/2014/02/19/sierpinski-triangle-in-d3/</guid><description>There&amp;rsquo;s a little known algorithm for constructing a Sierpinski triangle that is surprisingly easy to implement.
Start the three vertices that form a triangle Pick a random point inside the triangle Pick a random vertex Go halfway from a the random point to the vertex and mark that point Go to step 3 using the result of 4 as the starting point I&amp;rsquo;m trying to get better at D3 and thought it would be a good exercise to code it up.</description></item><item><title>Drowning in JavaScript</title><link>/2013/12/01/drowning-in-javascript/</link><pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate><guid>/2013/12/01/drowning-in-javascript/</guid><description>I recently installed Ghostery and am amazed by the number of JavaScript libraries being loaded on the sites I visit. Almost every site I visit has at least one analytics library, a few advertising libraries, and some social network sharing libraries.
To be a bit more quantitative, I pulled the libraries used by 20 of top sites to see if anything stood out. The biggest surprise was how differently the various types of sites used these libraries.</description></item><item><title>Some JavaScript Tools</title><link>/2013/10/05/some-javascript-tools/</link><pubDate>Sat, 05 Oct 2013 00:00:00 +0000</pubDate><guid>/2013/10/05/some-javascript-tools/</guid><description>Over the course of this year, I’ve been writing two posts a week and been running into various formatting/design issues, two of which I finally dealt with earlier this week. One was embedding an Excel table into a blog post and the other was creating a BCG style “growth-share” matrix.
To convert a table from Excel to HTML I would write Excel formulae that would wrap each cell in a &amp;lt;td&amp;gt; tag and then wrap each row in a &amp;lt;tr&amp;gt;tag.</description></item><item><title>Extract info from a web page using JavaScript</title><link>/2013/08/26/extract-info-from-a-web-page-using-javascript/</link><pubDate>Mon, 26 Aug 2013 00:00:00 +0000</pubDate><guid>/2013/08/26/extract-info-from-a-web-page-using-javascript/</guid><description>How many times have you tried copying something from a webpage into Excel and discovering that the formatting got completely messed up and forced you to clean the data up manually? With just a bit of knowledge about HTML and CSS you can use JavaScript to get the information you want without having to struggle with the formatting issues.
In my case, I participated in a fantasy football draft and wanted to share the list of players I drafted with a friend.</description></item><item><title>D3 and Vega</title><link>/2013/07/09/d3-and-vega/</link><pubDate>Tue, 09 Jul 2013 00:00:00 +0000</pubDate><guid>/2013/07/09/d3-and-vega/</guid><description>Something I’ve always enjoyed is messing around with data. For me, the first part has always been to plot the data to get a quick understanding of the dataset. Is there any obvious distribution visible? What are the data ranges? Are there any clusters that fit a known pattern? Does the data look clean or are there a ton of outliers? Does the data even make sense? Only then would I start the analysis and modeling piece.</description></item></channel></rss>